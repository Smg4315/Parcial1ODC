// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/ALU.hdl
/**
 * ALU (Arithmetic Logic Unit):
 * Computes out = one of the following functions:
 *                0, 1, -1,
 *                x, y, !x, !y, -x, -y,
 *                x + 1, y + 1, x - 1, y - 1,
 *                x + y, x - y, y - x,
 *                x & y, x | y
 * on the 16-bit inputs x, y,
 * according to the input bits zx, nx, zy, ny, f, no.
 * In addition, computes the two output bits:
 * if (out == 0) zr = 1, else zr = 0
 * if (out < 0)  ng = 1, else ng = 0
 */
// Implementation: Manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) sets x = 0        // 16-bit constant
// if (nx == 1) sets x = !x       // bitwise not
// if (zy == 1) sets y = 0        // 16-bit constant
// if (ny == 1) sets y = !y       // bitwise not
// if (f == 1)  sets out = x + y  // integer 2's complement addition
// if (f == 0)  sets out = x & y  // bitwise and
// if (no == 1) sets out = !out   // bitwise not

CHIP ALU {
    IN  
        x1[16], y1[16], x2[16], y2[16], // 32-bit inputs
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute (out = x + y) or (out = x & y)?
        no; // negate the out output?
    OUT 
        out[32], // 32-bit output
        zr,      // if (out == 0) equals 1, else 0
        ng;      // if (out < 0)  equals 1, else 0

    PARTS:
    
    // Desarollo de entrada X

    // Desarrollo de X1
    // Mux x1 o entrada igual a 0 (Zx1)
    Mux16(a=x1, b= false, sel=zx, out=x1z);

    // Negar la entrada 
    Not16(in=x1z, out=x1n); 

    // Implementamos el Nx1 (negar o no la entrada)
    Mux16(a=x1z, b=x1n, sel=nx, out=x1out);

    //Desarollo de x2
    // Mux x2 o entrada igual a 0 (Zx2)
    Mux16(a=x2, b= false, sel=zx, out=x2z);

    // Negar la entrada 
    Not16(in=x2z, out=x2n); 

    // Implementamos el Nx2 (negar o no la entrada)
    Mux16(a=x2z, b=x2n, sel=nx, out=x2out);

    // Desarollo de entrada Y

    // Desarrollo de Y1
    // Mux y1 o entrada igual a 0 (Zy1)
    Mux16(a=y1, b= false, sel=zy, out=y1z);

    // Negar la entrada 
    Not16(in=y1z, out=y1n); 

    // Implementamos el Ny1 (negar o no la entrada)
    Mux16(a=y1z, b=y1n, sel=ny, out=y1out);

    //Desarollo de y2
    // Mux y2 o entrada igual a 0 (Zy2)
    Mux16(a=y2, b= false, sel=zy, out=y2z);

    // Negar la entrada 
    Not16(in=y2z, out=y2n);

    // Implementamos el Ny2 (negar o no la entrada)
    Mux16(a=y2z, b=y2n, sel=ny, out=y2out);

}